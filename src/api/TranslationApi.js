/*
 * Woolball AI Network API
 * **Transform idle browsers into a powerful distributed AI inference network**  For detailed examples and model lists, visit our [GitHub repository](https://github.com/woolball-xyz/woolball-server).
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.71
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import TranslationResponse from '../model/TranslationResponse';

/**
* Translation service.
* @module api/TranslationApi
* @version v1
*/
export default class TranslationApi {

    /**
    * Constructs a new TranslationApi. 
    * @alias module:api/TranslationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the translation operation.
     * @callback moduleapi/TranslationApi~translationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TranslationResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Translation
     * Translate text between 200+ languages using NLLB models. Uses FLORES200 format for language codes.
     * @param {String} model 
     * @param {String} dtype 
     * @param {String} input 
     * @param {String} srcLang 
     * @param {String} tgtLang 
     * @param {module:api/TranslationApi~translationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    translation(model, dtype, input, srcLang, tgtLang, callback) {
      
      let postBody = null;
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling translation");
      }
      // verify the required parameter 'dtype' is set
      if (dtype === undefined || dtype === null) {
        throw new Error("Missing the required parameter 'dtype' when calling translation");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling translation");
      }
      // verify the required parameter 'srcLang' is set
      if (srcLang === undefined || srcLang === null) {
        throw new Error("Missing the required parameter 'srcLang' when calling translation");
      }
      // verify the required parameter 'tgtLang' is set
      if (tgtLang === undefined || tgtLang === null) {
        throw new Error("Missing the required parameter 'tgtLang' when calling translation");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'model': model,'dtype': dtype,'input': input,'srcLang': srcLang,'tgtLang': tgtLang
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = TranslationResponse;

      return this.apiClient.callApi(
        '/api/v1/translation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
/*
 * Woolball AI Network API
 * **Transform idle browsers into a powerful distributed AI inference network**  For detailed examples and model lists, visit our [GitHub repository](https://github.com/woolball-xyz/woolball-server).
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.71
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import TTSResponse from '../model/TTSResponse';

/**
* TextToSpeech service.
* @module api/TextToSpeechApi
* @version v1
*/
export default class TextToSpeechApi {

    /**
    * Constructs a new TextToSpeechApi. 
    * @alias module:api/TextToSpeechApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the textToSpeech operation.
     * @callback moduleapi/TextToSpeechApi~textToSpeechCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TTSResponse>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Text-to-Speech
     * Generate natural speech from text using MMS or Kokoro models. Supports multiple languages and premium voices.
     * @param {String} model 
     * @param {String} dtype 
     * @param {String} input 
     * @param {String} voice 
     * @param {Boolean} stream 
     * @param {module:api/TextToSpeechApi~textToSpeechCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    textToSpeech(model, dtype, input, voice, stream, callback) {
      
      let postBody = null;
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling textToSpeech");
      }
      // verify the required parameter 'dtype' is set
      if (dtype === undefined || dtype === null) {
        throw new Error("Missing the required parameter 'dtype' when calling textToSpeech");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling textToSpeech");
      }
      // verify the required parameter 'voice' is set
      if (voice === undefined || voice === null) {
        throw new Error("Missing the required parameter 'voice' when calling textToSpeech");
      }
      // verify the required parameter 'stream' is set
      if (stream === undefined || stream === null) {
        throw new Error("Missing the required parameter 'stream' when calling textToSpeech");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'model': model,'dtype': dtype,'input': input,'voice': voice,'stream': stream
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = [TTSResponse];

      return this.apiClient.callApi(
        '/api/v1/text-to-speech', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}